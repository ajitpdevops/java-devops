on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'
        server-id: github
        settings-path: ${{ github.workspace }}
    
    - name: Run Commands
      run: |
        java -version
        mvn -version
        docker --version
        terraform --version
        echo "PWD: ${pwd}"
        echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"

    - name: Start PostgreSQL
      run: docker compose -f compose.yml up -d web-db
      working-directory: src

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with: 
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
          
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean install
      working-directory: src/couponservice

    - name: Run Tests
      run: mvn test
      working-directory: src/couponservice

    # Run SonarCloud analysis
    - name: Build and analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cyberlysafe_java-springboot-microservices
      working-directory: src/couponservice

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Set version to latest commit
      # append the short SHA to the project version in POM file 
      run: |
        BASE_VERSION=$(cat base-version.txt)
        COMMIT_SHA=$(git rev-parse --short HEAD)
        NEW_VERSION="$BASE_VERSION-$COMMIT_SHA"
        echo "New version: $NEW_VERSION"
        echo "version=$NEW_VERSION" >> $GITHUB_ENV
      working-directory: src/couponservice
      
    - name: Run Docker Maven Build
      run: |
        docker compose -f compose.yml up -d mvn-coupon
        docker wait mvn-coupon
      working-directory: src

    - name: Print Docker Images and Containers
      run: |
        docker images
        docker ps -a
        pwd
        ls -la
      working-directory: src

    - name: Run Docker App
      run: |
        docker compose ps
        docker compose -f compose.yml up -d coupon-app
      working-directory: src

    - name: Tag Docker Image
      run: |
        docker tag src-coupon-app:latest whoajitpatil/couponservice:latest
        docker tag src-coupon-app:latest whoajitpatil/couponservice:${{ env.version }}
      working-directory: src

    - name: Docker login
      uses: docker/login-action@v3
      with:
        username: whoajitpatil
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image
      run: |
        docker push whoajitpatil/couponservice:latest
        docker push whoajitpatil/couponservice:${{ env.version }}
      working-directory: src
